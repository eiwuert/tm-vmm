#
#                                                                   
#                   Testing Machine
#                      
#   Copyright (C) 2012, 2013 TIS Innovation Park
#                                                                   
# This program is free software; you can redistribute it and/or     
# modify it under the terms of the GNU General Public License       
# as published by the Free Software Foundation; either version 3    
# of the License, or any later version.                             
#                                                                   
#                                                                   
# This program is distributed in the hope that it will be useful,   
# but WITHOUT ANY WARRANTY; without even the implied warranty of    
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     
# GNU General Public License for more details.                      
#                                                                   
# You should have received a copy of the GNU General Public License 
# along with this program; if not, write to the Free Software       
# Foundation, Inc., 51 Franklin Street, Boston,            
# MA  02110-1301, USA.                                              
#

echo_vbox_client_conf()
{
    VM_MACHINE="$1"

    echo VM_NAME=\"$VM_MACHINE\"
    echo VM_TYPE=\"VirtualBox\"
    echo VM_IP_ADDRESS=localhost
    echo VM_USER=$(whoami)
    echo VM_SUPERUSER=root
    echo SSH_PORT=auto
    echo SSH_SHUTDOWN_COMMAND=\"shutdown -h now\"
}

echo_android_client_conf()
{
    VM_MACHINE=$1

    echo VM_NAME=\"$VM_MACHINE\"
    echo VM_TYPE=\"Android\"
    VM_TYPE="Android"
    # ANDROID_SYS=""

    if [ $ANDROID_SYS != physical ]
	then
	CPU_ARCH=$(grep cpu.arch $ANDROID_AVD_DIR/$1.avd/config.ini | sed 's,hw\.cpu\.arch=,,g')
	CPU_MODEL=$(grep cpu.model $ANDROID_AVD_DIR/$1.avd/config.ini | sed 's,hw\.cpu\.model=,,g')

	ANDROID_SYS=""
	if [ "$CPU_ARCH" = "arm" ]
	then
	    if [ "$CPU_MODEL" = "cortex-a8" ]
	    then
		ANDROID_SYS="emulator64-arm"
	    fi
	elif [ "$CPU_ARCH" = "x86" ]
	then
	    ANDROID_SYS="emulator64-x86"
	else
	    echo "Unsupported CPU"
	fi
    fi

    echo "ANDROID_SYS=$ANDROID_SYS"
    echo "#CPU_ARCH=$CPU_ARCH"
    echo "#CPU_MODEL=$CPU_MODEL"
}

create_vbox_client_conf()
{
    VM_MACHINE="$1"
    VM_MACHINE_NOBLANKS="${1/ /_}"

    CONF_NAME=${PERSONAL_ETC_DIR}/clients/$VM_MACHINE_NOBLANKS.conf

    if [ -f $CONF_NAME ]
	then
	debug "Configuration file for \"$VM_MACHINE\" already exists."
	debug "   $CONF_NAME"
	echo "Configuration file for \"$VM_MACHINE\" already exists."
	echo "   $CONF_NAME"
	return 1
    fi

    if [ ! -d ${PERSONAL_ETC_DIR}/clients ]
    then
	mkdir -p ${PERSONAL_ETC_DIR}/clients
    fi

    echo_vbox_client_conf "$VM_MACHINE" > $CONF_NAME
    if [ $? = 0 ] ; then
	debug "Created conf for vbox \"VM_MACHINE\"."
	echo "Created $CONF_NAME"
    else
	debug "Failed to create conf for vbox \"VM_MACHINE\"."
	echo "Failed to create conf for vbox \"VM_MACHINE\"."
    fi
    return $?
}

create_android_client_conf()
{
    VM_MACHINE="$1"
    VM_MACHINE_NOBLANKS="${1/ /_}"

    CONF_NAME=${PERSONAL_ETC_DIR}/clients/$VM_MACHINE_NOBLANKS.conf

    if [ -f $CONF_NAME ]
	then
	echo "Configuration file for \"$VM_MACHINE\" already exist.s"
	echo "   $CONF_NAME"
	return 1
    fi

    if [ ! -d ${PERSONAL_ETC_DIR}/clients ]
    then
	mkdir -p ${PERSONAL_ETC_DIR}/clients
    fi

    echo_android_client_conf $VM_MACHINE > $CONF_NAME

    if [ $? = 0 ] ; then
	debug "Created conf for android \"VM_MACHINE\"."
	echo "Created $CONF_NAME"
    else
	debug "Failed to create conf for android \"VM_MACHINE\"."
	echo "Failed to create conf for android \"VM_MACHINE\"."
    fi
    return $?
}


create_client_conf()
{
    VM_MACHINE="$1"

    find_vm_type "$VM_MACHINE"

    if [ "$VM_TYPE" = "" ]
    then
	echo "Couldn't find type for machine \"$VM_MACHINE\"."
	return 1
    elif [ "$VM_TYPE" = "VirtualBox" ]
    then
	create_vbox_client_conf "$VM_MACHINE"
	return $?
    elif [ "$VM_TYPE" = "Android" ]
    then
	# Hack to set ANDROID_SYS (should we re-architect?)
	check_android_vm_existence "$VM_MACHINE"
	create_android_client_conf "$VM_MACHINE"
	return $?
    else
	echo "Can't create conf for \"$VM_MACHINE\" ($VM_TYPE)."
	return 1
    fi
}
